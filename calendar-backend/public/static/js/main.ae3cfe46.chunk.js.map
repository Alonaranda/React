{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleInputChangeLogin","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleInputChangeRegister","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","formValues","setFormValues","tituloValid","setTituloValid","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","length","getState","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","CalendarEvent","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae3cfe46.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n\n    eventStartAddNew: '[event] Start Add New ',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear Active event',\n    eventUpdated: '[event] Updated',\n    eventDeleted: '[event] Deleted',\n    eventLoaded: '[event] Events Loaded',\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start Token renew ',\n    authLogout: '[auth] Logout ',\n}","import { types } from \"../types/types\";\n\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n// {\n//     id: new Date().getTime(), --> de DB \n//     title: 'Cumpleaños',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '12345',\n//         name: 'Christian'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null \n}\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return{\n                ...state,\n                activeEvent: action.payload\n            }\n        case types.eventAddNew:\n            return{\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        case types.eventClearActiveEvent:\n            return{\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return{\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return{\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n\n            }\n\n        case types.eventLoaded:\n            return{\n                ...state,\n                events: [...action.payload]\n            }\n            \n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true,\n    //uid: null,\n    //name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n    \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false,\n            }\n        \n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        \n            case types.authLogout:\n                return {\n                    checking: false\n                }\n            \n    \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\nexport const rootReducer = combineReducers({\n    //Mis reducers\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n\n})","import {createStore, applyMiddleware, compose} from 'redux';\nimport { rootReducer } from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n    if(method === 'GET'){\n        return fetch(url);\n    }else{\n        return fetch(url, {\n            method,\n            headers:{\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data)\n        });\n    }\n}\n\nconst fetchConToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token')|| '';\n    if(method === 'GET'){\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }else{\n        return fetch(url, {\n            method,\n            headers:{\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data)\n        });\n    }\n}\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment';\n\nexport const prepareEvents = (events = []) => {\n    //console.log(events);\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate()\n        })\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n\n\n    return async (dispatch, getState) => {\n        //console.log(event);\n        try {\n            const {uid, name} = getState().auth;\n\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n            //console.log(body);\n            if(body.ok){\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                //console.log(body);\n                dispatch(eventAddNew(event));\n            }   \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\n\nexport const eventStartUpdated = (event) => {\n    return async(dispatch) => {\n        try {\n            const resp = await fetchConToken(`events/${event.id}`, event , 'PUT');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch(eventUpdated(event));\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n            }\n            \n        } catch (error) { \n            console.log(error);\n        }\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\n\nexport const eventStartDeleted = () => {\n    return async (dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${id}`, {} , 'DELETE');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch(eventDeleted());\n            }else{\n                Swal.fire('Error', body.msg, 'error')\n            }\n            \n        } catch (error) { \n            console.log(error);\n        }\n    }\n}\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted,\n});\n\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        console.log('EventStartLoading');\n\n        try {\n            const resp = await fetchConToken('events');\n            const body = await resp.json();\n            console.log(body);\n            const events = prepareEvents(body.eventos);\n            console.log(events);\n            dispatch(eventLoaded(events));\n            \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n});","import { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport Swal from \"sweetalert2\"; \nimport { eventLogout } from \"./events\";\n\n//Tareas asincronas\nexport const startLogin = (email, password) => {\n    return async(dispatch) => {\n        //console.log(email, password);\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\n        const body = await resp.json();\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async (dispatch) => {\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\n        const body = await resp.json();\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n        //console.log(body);\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            dispatch(checkingFinish());\n        }\n    }\n}\n\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logout());\n        dispatch(eventLogout());\n    }\n}\n\nconst logout = () => ({\n    type: types.authLogout\n});\n\n\n","import {useState} from 'react'\n\n\nexport const useForm = (initialState={}) => {\n\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState);\n    }\n\n    const handleInputChange = ({target}) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    } \n\n    return [values, handleInputChange, reset];\n\n}","import React from 'react';\nimport {useDispatch} from 'react-redux'\nimport './login.css';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n\n    //Form Login\n    const [formLoginValues, handleInputChangeLogin] = useForm({\n        lEmail: 'chris@gmail.com',\n        lPassword: '123456'\n    });\n    const {lEmail, lPassword} = formLoginValues;\n    const handleLogin = (e) => {\n        e.preventDefault();\n        //console.log(formLoginValues);\n        dispatch(startLogin(lEmail,lPassword));\n    }\n\n\n    //Form Register\n    const [formRegisterValues, handleInputChangeRegister] = useForm({\n        rName: 'Alonso',\n        rEmail: 'alonso@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456',\n    });\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\n    const hanldeRegister = (e) => {\n        e.preventDefault();\n        console.log(formRegisterValues);\n        if(rPassword1 !== rPassword2){\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\n        }\n        dispatch(startRegister(rEmail, rPassword1, rName));\n    } \n\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleInputChangeLogin}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleInputChangeLogin}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={hanldeRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleInputChangeRegister}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleInputChangeRegister}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleInputChangeRegister}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleInputChangeRegister}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const {name} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button\n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            ><i className=\"fas fa-sign-out-alt\"/> Salir</button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal,\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal,\n});","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/events';\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\nModal.setAppElement('#root');\n\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: moment(now).toDate(),\n    end: moment(nowPlus1).toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n    const dispatch = useDispatch();\n\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const [tituloValid, setTituloValid] = useState(true);\n\n    const {title, notes, start, end} = formValues;\n\n\n    useEffect(() => {\n        //console.log(activeEvent);\n        if(activeEvent) {\n            setFormValues(activeEvent);\n        }else{\n            setFormValues(initEvent);\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n\n    const handleInputChange = ({target}) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        //console.log('Cerrando modal');\n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    }\n\n    //Definir mi fecha de inicio\n    const handleStartDateChange = (e) => {\n        //console.log(`Me regresa una fecha de inicio: ${e}`);\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        });\n    }\n\n    //Definir mi fecha de inicio\n    const handleEndDateChange = (e) => {\n        //console.log(`Me regresa una fecha de fin: ${e}`);\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        });\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        //console.log(formValues);\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if(momentStart.isSameOrAfter(momentEnd)){\n            console.log('Fecha fin debe de ser mayor');\n            return Swal.fire('Error', 'Fecha fin debe ser mayor', 'error')\n        }\n\n        if(title.length < 2){\n            console.log('Te falto el titulo');\n            return setTituloValid(false);\n        }\n\n        if(activeEvent){\n            dispatch(eventStartUpdated(formValues));\n        }else {\n            dispatch(eventStartAddNew({\n                ...formValues,\n            }));\n        }\n\n        setTituloValid(true);\n        closeModal();\n\n    }\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n        >\n            <h1>{(activeEvent)? 'Editar evento...' : 'Nuevo evento!'} </h1>\n            <hr />\n            <form   \n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                        format=\"y-MM-dd h:mm:ss a\"\n                        amPmAriaLabel=\"Select AM/PM\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        className=\"form-control\"\n                        format=\"y-MM-dd h:mm:ss a\"\n                        amPmAriaLabel=\"Select AM/PM\"\n                        minDate={dateStart}\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${!tituloValid && \"is-invalid\"} `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n        \n    )\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n    //console.log(event)\n    const {title, user} = event;\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span>-{user.name}</span>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        console.log('Click en Add new');\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClickNew}\n        \n        ><i className=\"fas fa-plus\"/></button>\n    )\n}\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\nimport { eventStartDeleted } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDeleted());\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDelete}\n\n        ><i className=\"fas fa-trash\"/><span> Borrar evento</span></button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarModal } from './CalendarModal';\nimport { CalendarEvent } from './CalendarEvent';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\n//Informacion muestra -- borrar\n// const events = [{\n//     title: 'Cumpleaños',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '12345',\n//         name: 'Christian'\n//     }\n// }];\n\nexport const CalendarScreen = () => {\n\n    const {events, activeEvent} = useSelector(state => state.calendar);\n    const {uid} = useSelector(state => state.auth)\n    //console.log(events);\n\n    const dispatch = useDispatch();\n\n    //Mi variable que actualiza la ultima vista\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        //console.log(e);\n        console.log('Abrir modal --> Doble Click');\n        dispatch(uiOpenModal());\n        \n    }\n\n    const onSelectEvent = (e) => {\n        //console.log(e);\n        dispatch(eventSetActive(e));\n        \n    }\n\n    const onViewChange = (e) => {\n        //console.log(e);  --> Se si estoy en mes, semana, dia, agenda\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    \n    const eventStyleGetter = (event,start, end, isSelected) => {\n        //console.log(event);\n        //console.log(event,start, end, isSelected);\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadius: '3px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {\n            style\n        }\n    };\n\n    const onSelectSlot = (e) => {\n        //Podemos hacer evento seleccionando un espacio vacio \n        dispatch(eventClearActiveEvent());\n    }\n\n\n\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar/>\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab/>\n            {\n                (activeEvent !== null) &&\n                 <DeleteEventFab/>\n            }\n\n            <CalendarModal/>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated) ? (<Component{...props}/>) : (<Redirect to=\"/login\"/>)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated) ? (<Redirect to=\"/\"/>) : (<Component{...props}/>) \n            )}\n        />\n    )\n}\n\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\n\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const {checking, uid} = useSelector(state => state.auth);\n    //console.log(checking);\n\n    useEffect(() => {\n      dispatch(startChecking());\n    }, [dispatch])\n\n    if(checking) {\n      return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n        <>\n          <Switch>\n              <PublicRoute \n                exact \n                path=\"/login\" \n                component={LoginScreen}\n                isAuthenticated={!!uid}\n              />\n  \n              <PrivateRoute \n                exact\n                path=\"/\" \n                component={CalendarScreen}\n                isAuthenticated={!!uid}\n              />\n\n              <Redirect\n                to=\"/\"\n              />\n          </Switch>\n        </>\n      </Router>\n    )\n}\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport '../src/styles.css';\n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}